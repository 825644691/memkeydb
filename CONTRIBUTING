Note: by contributing code to the MemKeyDB project in any form, including sending
a pull request via Github, a code fragment or patch via private email or
public discussion groups, you agree to release your code under the terms
of the BSD license that you can find in the COPYING file included in the MemKeyDB
source distribution. You will include BSD license in the COPYING file within
each source file that you contribute.

# How to provide a patch for a new feature

1. If it is a major feature or a semantical change, please don't start coding
straight away: if your feature is not a conceptual fit you'll lose a lot of
time writing the code without any reason. Start by posting in the mailing list
and creating an issue at Github with the description of, exactly, what you want
to accomplish and why. Use cases are important for features to be accepted.
Here you'll see if there is consensus about your idea.

2. If in step 1 you get an acknowledgment from the project leaders, use the
   following procedure to submit a patch:

    a. Fork MemKeyDB on github ( http://help.github.com/fork-a-repo/ )
    b. Create a topic branch (git checkout -b general-change-topic)
    c. Push to your branch (git push origin general-change-topic)
    d. Initiate a pull request on github ( https://help.github.com/articles/creating-a-pull-request/ )
    e. Done :)

3. For minor fixes just open a pull request on Github.

4. MemKeyDB has 4 core maintainers. Each patch must receive an approval from at least two core maintainers and pass all CI checks before it can be merged.

Thanks!
